{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimServiceName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/colours-api;rev=1')]",
      "dependsOn": [],
      "properties": {
        "description": "Colours API",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "subscriptionRequired": true,
        "displayName": "Colours API",
        "serviceUrl": "https://markcolorapi.azurewebsites.net/",
        "path": "colour",
        "format": "openapi-link",
        //"format": "swagger-json",
        "value": "https://github.com/dcucereavii-ms/colourapi_swagger/blob/main/petstore.yaml",
        //"contentFormat": "openapi-link",
        //"contentValue": "https://dev.azure.com/dcucereavii/_git/APIM_Schema_deployment?path=/swagger.json",
        //"value": "https://storageaccountapimda4fd.blob.core.windows.net/swagger/markcolorapi.json?sp=r&st=2022-09-08T19:51:03Z&se=2022-09-09T03:51:03Z&spr=https&sv=2021-06-08&sr=b&sig=DnjH8Z08AJ3bG6VnBn%2BiSnagJX%2BGVjH6lmX8w%2FDE8hE%3D",
        //"format": "openapi-link",
        "protocols": [
          "https"
        ]
      }
    }
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1')]",
    //   "dependsOn": [],
    //   "properties": {
    //     "authenticationSettings": {
    //       "subscriptionKeyRequired": false
    //     },
    //     "subscriptionKeyParameterNames": {
    //       "header": "Ocp-Apim-Subscription-Key",
    //       "query": "subscription-key"
    //     },
    //     "apiRevision": "1",
    //     "subscriptionRequired": true,
    //     "displayName": "Echo API",
    //     "serviceUrl": "http://echoapi.cloudapp.net/api",
    //     "path": "echo",
    //     "protocols": [
    //       "https"
    //     ]
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/schemas",
    //   "name": "[concat(parameters('apimServiceName'), '/colours-api;rev=1/6319dc5a4634610e3c4c9d75')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'colours-api;rev=1')]"
    //   ],
    //   "properties": {
    //     "contentType": "application/vnd.oai.openapi.components+json",
    //     "document": {
    //       "components": {
    //         "schemas": {
    //           "ColoursItem": {
    //             "type": "object",
    //             "properties": {
    //               "id": {
    //                 "type": "integer",
    //                 "format": "int32"
    //               },
    //               "name": {
    //                 "type": "string",
    //                 "nullable": true
    //               },
    //               "data": {
    //                 "type": "string",
    //                 "nullable": true
    //               }
    //             },
    //             "additionalProperties": false
    //           },
    //           "ProblemDetails": {
    //             "type": "object",
    //             "properties": {
    //               "type": {
    //                 "type": "string",
    //                 "nullable": true
    //               },
    //               "title": {
    //                 "type": "string",
    //                 "nullable": true
    //               },
    //               "status": {
    //                 "type": "integer",
    //                 "format": "int32",
    //                 "nullable": true
    //               },
    //               "detail": {
    //                 "type": "string",
    //                 "nullable": true
    //               },
    //               "instance": {
    //                 "type": "string",
    //                 "nullable": true
    //               }
    //             },
    //             "additionalProperties": {}
    //           },
    //           "ColoursGet200TextPlainResponse": {
    //             "type": "array",
    //             "items": {
    //               "$ref": "#/components/schemas/ColoursItem"
    //             },
    //             "x-apim-inline": true
    //           },
    //           "ColoursGet200ApplicationJsonResponse": {
    //             "type": "array",
    //             "items": {
    //               "$ref": "#/components/schemas/ColoursItem"
    //             },
    //             "x-apim-inline": true
    //           },
    //           "ColoursGet200TextJsonResponse": {
    //             "type": "array",
    //             "items": {
    //               "$ref": "#/components/schemas/ColoursItem"
    //             },
    //             "x-apim-inline": true
    //           },
    //           "ColoursPostRequest": {
    //             "type": "array",
    //             "items": {
    //               "$ref": "#/components/schemas/ColoursItem"
    //             },
    //             "x-apim-inline": true
    //           },
    //           "ColoursPostRequest-1": {
    //             "type": "array",
    //             "items": {
    //               "$ref": "#/components/schemas/ColoursItem"
    //             },
    //             "x-apim-inline": true
    //           },
    //           "ColoursPostRequest-2": {
    //             "type": "array",
    //             "items": {
    //               "$ref": "#/components/schemas/ColoursItem"
    //             },
    //             "x-apim-inline": true
    //           },
    //           "Colours-colourId-GetRequest": {
    //             "type": "integer",
    //             "format": "int32",
    //             "x-apim-inline": true
    //           },
    //           "Colours-colourId-PostRequest": {
    //             "type": "integer",
    //             "format": "int32",
    //             "x-apim-inline": true
    //           },
    //           "Colours-colourId-DeleteRequest": {
    //             "type": "integer",
    //             "format": "int32",
    //             "x-apim-inline": true
    //           },
    //           "ColoursFindbynameGetRequest": {
    //             "type": "string",
    //             "x-apim-inline": true
    //           }
    //         }
    //       }
    //     }
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/products/apis",
    //   "name": "[concat(parameters('apimServiceName'), '/starter/echo-api;rev=1')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api;rev=1')]"
    //   ],
    //   "properties": {
    //     "displayName": "Starter",
    //     "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
    //     "subscriptionRequired": true,
    //     "approvalRequired": false,
    //     "state": "published"
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/products/apis",
    //   "name": "[concat(parameters('apimServiceName'), '/unlimited/echo-api;rev=1')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api;rev=1')]"
    //   ],
    //   "properties": {
    //     "displayName": "Unlimited",
    //     "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
    //     "subscriptionRequired": true,
    //     "approvalRequired": true,
    //     "state": "published"
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations",
    //   "name": "[concat(parameters('apimServiceName'), '/colours-api;rev=1/GetRandomColour')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'colours-api;rev=1')]",
    //     "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), 'colours-api;rev=1', '6319dc5a4634610e3c4c9d75')]"
    //   ],
    //   "properties": {
    //     "displayName": "Get random colour",
    //     "method": "GET",
    //     "urlTemplate": "/colours/random",
    //     "description": "Returns random colour.",
    //     "templateParameters": [],
    //     "responses": [
    //       {
    //         "description": "Success - returns random colour",
    //         "headers": [],
    //         "representations": [
    //           {
    //             "contentType": "text/plain",
    //             "schemaId": "6319dc5a4634610e3c4c9d75",
    //             "typeName": "ColoursItem",
    //             "examples": {
    //               "default": {}
    //             }
    //           },
    //           {
    //             "contentType": "application/json",
    //             "schemaId": "6319dc5a4634610e3c4c9d75",
    //             "typeName": "ColoursItem",
    //             "examples": {
    //               "default": {
    //                 "value": {
    //                   "id": 0,
    //                   "name": "string",
    //                   "data": "string"
    //                 }
    //               }
    //             }
    //           },
    //           {
    //             "contentType": "text/json",
    //             "schemaId": "6319dc5a4634610e3c4c9d75",
    //             "typeName": "ColoursItem",
    //             "examples": {
    //               "default": {
    //                 "value": {
    //                   "id": 0,
    //                   "name": "string",
    //                   "data": "string"
    //                 }
    //               }
    //             }
    //           }
    //         ],
    //         "statusCode": 200
    //       },
    //       {
    //         "description": "Not Found",
    //         "headers": [],
    //         "representations": [
    //           {
    //             "contentType": "text/plain",
    //             "schemaId": "6319dc5a4634610e3c4c9d75",
    //             "typeName": "ProblemDetails",
    //             "examples": {
    //               "default": {}
    //             }
    //           },
    //           {
    //             "contentType": "application/json",
    //             "schemaId": "6319dc5a4634610e3c4c9d75",
    //             "typeName": "ProblemDetails",
    //             "examples": {
    //               "default": {
    //                 "value": {
    //                   "type": "string",
    //                   "title": "string",
    //                   "status": 0,
    //                   "detail": "string",
    //                   "instance": "string"
    //                 }
    //               }
    //             }
    //           },
    //           {
    //             "contentType": "text/json",
    //             "schemaId": "6319dc5a4634610e3c4c9d75",
    //             "typeName": "ProblemDetails",
    //             "examples": {
    //               "default": {
    //                 "value": {
    //                   "type": "string",
    //                   "title": "string",
    //                   "status": 0,
    //                   "detail": "string",
    //                   "instance": "string"
    //                 }
    //               }
    //             }
    //           }
    //         ],
    //         "statusCode": 404
    //       }
    //     ]
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1/create-resource')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api;rev=1')]"
    //   ],
    //   "properties": {
    //     "displayName": "Create resource",
    //     "method": "POST",
    //     "urlTemplate": "/resource",
    //     "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
    //     "templateParameters": [],
    //     "request": {
    //       "headers": [],
    //       "queryParameters": [],
    //       "representations": [
    //         {
    //           "contentType": "application/json",
    //           "examples": {
    //             "default": {
    //               "value": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
    //             }
    //           }
    //         }
    //       ]
    //     },
    //     "responses": [
    //       {
    //         "headers": [],
    //         "representations": [],
    //         "statusCode": 200
    //       }
    //     ]
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1/modify-resource')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api;rev=1')]"
    //   ],
    //   "properties": {
    //     "displayName": "Modify Resource",
    //     "method": "PUT",
    //     "urlTemplate": "/resource",
    //     "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
    //     "templateParameters": [],
    //     "responses": [
    //       {
    //         "headers": [],
    //         "representations": [],
    //         "statusCode": 200
    //       }
    //     ]
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1/remove-resource')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api;rev=1')]"
    //   ],
    //   "properties": {
    //     "displayName": "Remove resource",
    //     "method": "DELETE",
    //     "urlTemplate": "/resource",
    //     "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
    //     "templateParameters": [],
    //     "responses": [
    //       {
    //         "headers": [],
    //         "representations": [],
    //         "statusCode": 200
    //       }
    //     ]
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1/retrieve-header-only')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api;rev=1')]"
    //   ],
    //   "properties": {
    //     "displayName": "Retrieve header only",
    //     "method": "HEAD",
    //     "urlTemplate": "/resource",
    //     "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
    //     "templateParameters": [],
    //     "responses": [
    //       {
    //         "headers": [],
    //         "representations": [],
    //         "statusCode": 200
    //       }
    //     ]
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1/retrieve-resource')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api;rev=1')]"
    //   ],
    //   "properties": {
    //     "displayName": "Retrieve resource",
    //     "method": "GET",
    //     "urlTemplate": "/resource",
    //     "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
    //     "templateParameters": [],
    //     "request": {
    //       "headers": [],
    //       "queryParameters": [
    //         {
    //           "defaultValue": "sample",
    //           "description": "A sample parameter that is required and has a default value of \"sample\".",
    //           "name": "param1",
    //           "required": true,
    //           "type": "string"
    //         },
    //         {
    //           "description": "Another sample parameter, set to not required.",
    //           "name": "param2",
    //           "required": false,
    //           "type": "number"
    //         }
    //       ],
    //       "representations": []
    //     },
    //     "responses": [
    //       {
    //         "description": "Returned in all cases.",
    //         "headers": [],
    //         "representations": [],
    //         "statusCode": 200
    //       }
    //     ]
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1/retrieve-resource-cached')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api;rev=1')]"
    //   ],
    //   "properties": {
    //     "displayName": "Retrieve resource (cached)",
    //     "method": "GET",
    //     "urlTemplate": "/resource-cached",
    //     "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
    //     "templateParameters": [],
    //     "request": {
    //       "headers": [],
    //       "queryParameters": [
    //         {
    //           "defaultValue": "sample",
    //           "description": "A sample parameter that is required and has a default value of \"sample\".",
    //           "name": "param1",
    //           "required": true,
    //           "type": "string"
    //         },
    //         {
    //           "description": "Another sample parameter, set to not required.",
    //           "name": "param2",
    //           "required": false,
    //           "type": "string"
    //         }
    //       ],
    //       "representations": []
    //     },
    //     "responses": [
    //       {
    //         "headers": [],
    //         "representations": [],
    //         "statusCode": 200
    //       }
    //     ]
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations/policies",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1/create-resource/policy')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'echo-api;rev=1', 'create-resource')]"
    //   ],
    //   "properties": {
    //     "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <json-to-xml apply=\"always\" consider-accept-header=\"false\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>",
    //     "format": "xml"
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations/policies",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1/retrieve-header-only/policy')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'echo-api;rev=1', 'retrieve-header-only')]"
    //   ],
    //   "properties": {
    //     "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <set-header name=\"X-My-Sample\" exists-action=\"override\">\r\n      <value>This is a sample</value>\r\n      <!-- for multiple headers with the same name add additional value elements -->\r\n    </set-header>\r\n    <jsonp callback-parameter-name=\"ProcessResponse\" />\r\n  </outbound>\r\n</policies>",
    //     "format": "xml"
    //   }
    // },
    // {
    //   "apiVersion": "2021-08-01",
    //   "type": "Microsoft.ApiManagement/service/apis/operations/policies",
    //   "name": "[concat(parameters('apimServiceName'), '/echo-api;rev=1/retrieve-resource-cached/policy')]",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'echo-api;rev=1', 'retrieve-resource-cached')]"
    //   ],
    //   "properties": {
    //     "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\">\r\n      <vary-by-header>Accept</vary-by-header>\r\n      <vary-by-header>Accept-Charset</vary-by-header>\r\n    </cache-lookup>\r\n    <rewrite-uri template=\"/resource\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <cache-store duration=\"3600\" />\r\n  </outbound>\r\n</policies>",
    //     "format": "xml"
    //   }
    // }
  ]
}
