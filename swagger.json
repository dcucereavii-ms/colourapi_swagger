{
  "openapi": "3.0.1",
  "info": {
    "title": "Mark Harrison Colours API",
    "description": "Colours API",
    "termsOfService": "https://github.com/markharrison/ColoursAPI/blob/master/LICENSE",
    "contact": {
      "name": "Mark Harrison",
      "url": "https://github.com/markharrison/ColoursAPI",
      "email": "mark.coloursapi@harrison.ws"
    },
    "license": {
      "name": "Use under MIT License",
      "url": "https://github.com/markharrison/ColoursAPI/blob/master/LICENSE"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://markcolorapi.azurewebsites.net/"
    }
  ],
  "paths": {
    "/colours": {
      "get": {
        "tags": [
          "Colours"
        ],
        "summary": "Get colours",
        "description": "Returns all colours.",
        "operationId": "GetColours",
        "responses": {
          "200": {
            "description": "Success - returns list of colours",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColoursItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColoursItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColoursItem"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Colours"
        ],
        "summary": "Update / create colours",
        "description": "Updates colours - creates colour if it doesn't exist",
        "operationId": "UpdateColours",
        "requestBody": {
          "description": "Colours to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success - colours updated/created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Colours"
        ],
        "summary": "Delete colours",
        "description": "Deletes all colours.",
        "operationId": "DeletesColours",
        "responses": {
          "204": {
            "description": "Success - all colours deleted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            }
          }
        }
      }
    },
    "/colours/{colourId}": {
      "get": {
        "tags": [
          "Colours"
        ],
        "summary": "Get colour by id",
        "description": "Returns colour specified by {colourId} (must be between 1 and 1000).",
        "operationId": "GetColourById",
        "parameters": [
          {
            "name": "colourId",
            "in": "path",
            "description": "Id of Colour to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - returns colour",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Colours"
        ],
        "summary": "Update / create colour by id",
        "description": "Updates colour specified by {colourId} (must be between 1 and 1000);  use {colourId} = 0 to insert new color",
        "operationId": "UpdateColourById",
        "parameters": [
          {
            "name": "colourId",
            "in": "path",
            "description": "Id of Colour to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Colours to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColoursItem"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ColoursItem"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ColoursItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success - colour created/updated",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Colours"
        ],
        "summary": "Delete colour by id",
        "description": "Deletes colour specified by {colourId} (must be between 1 and 1000).",
        "operationId": "DeleteColourById",
        "parameters": [
          {
            "name": "colourId",
            "in": "path",
            "description": "Id of Colour to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success - colour deleted",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/colours/findbyname": {
      "get": {
        "tags": [
          "Colours"
        ],
        "summary": "Get colour by name",
        "description": "Returns colour specified by {colourName} ",
        "operationId": "GetColourByName",
        "parameters": [
          {
            "name": "colourName",
            "in": "query",
            "description": "Name of Colour to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - returns colour",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/colours/random": {
      "get": {
        "tags": [
          "Colours"
        ],
        "summary": "Get random colour",
        "description": "Returns random colour.",
        "operationId": "GetRandomColour",
        "responses": {
          "200": {
            "description": "Success - returns random colour",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/colours/reset": {
      "post": {
        "tags": [
          "Colours"
        ],
        "summary": "Reset colours",
        "description": "Reset colours to default.",
        "operationId": "ResetColours",
        "responses": {
          "201": {
            "description": "Success - colours reset",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColoursItem"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ColoursItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}